"""
    API Reference

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from timingapp.api_client import ApiClient, Endpoint as _Endpoint
from timingapp.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from timingapp.model.api_v1_projects_get200_response import ApiV1ProjectsGet200Response
from timingapp.model.api_v1_projects_get201_response import ApiV1ProjectsGet201Response
from timingapp.model.api_v1_projects_get_request import ApiV1ProjectsGetRequest
from timingapp.model.api_v1_projects_hierarchy_get200_response import ApiV1ProjectsHierarchyGet200Response
from timingapp.model.api_v1_projects_project_id_delete200_response import ApiV1ProjectsProjectIdDelete200Response
from timingapp.model.api_v1_projects_project_id_delete200_response1 import ApiV1ProjectsProjectIdDelete200Response1
from timingapp.model.api_v1_projects_project_id_delete_request import ApiV1ProjectsProjectIdDeleteRequest


class ProjectsApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client
        self.api_v1_projects_get_endpoint = _Endpoint(
            settings={
                'response_type': (ApiV1ProjectsGet200Response,),
                'auth': [
                    'default'
                ],
                'endpoint_path': '/api/v1/projects',
                'operation_id': 'api_v1_projects_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'title',
                    'hide_archived',
                    'team_id',
                    'authorization',
                    'content_type',
                    'accept',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'title':
                        (str,),
                    'hide_archived':
                        (str,),
                    'team_id':
                        (str,),
                    'authorization':
                        (str,),
                    'content_type':
                        (str,),
                    'accept':
                        (str,),
                },
                'attribute_map': {
                    'title': 'title',
                    'hide_archived': 'hide_archived',
                    'team_id': 'team_id',
                    'authorization': 'Authorization',
                    'content_type': 'Content-Type',
                    'accept': 'Accept',
                },
                'location_map': {
                    'title': 'query',
                    'hide_archived': 'query',
                    'team_id': 'query',
                    'authorization': 'header',
                    'content_type': 'header',
                    'accept': 'header',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.api_v1_projects_hierarchy_get_endpoint = _Endpoint(
            settings={
                'response_type': (ApiV1ProjectsHierarchyGet200Response,),
                'auth': [
                    'default'
                ],
                'endpoint_path': '/api/v1/projects/hierarchy',
                'operation_id': 'api_v1_projects_hierarchy_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'team_id',
                    'authorization',
                    'content_type',
                    'accept',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'team_id':
                        (str,),
                    'authorization':
                        (str,),
                    'content_type':
                        (str,),
                    'accept':
                        (str,),
                },
                'attribute_map': {
                    'team_id': 'team_id',
                    'authorization': 'Authorization',
                    'content_type': 'Content-Type',
                    'accept': 'Accept',
                },
                'location_map': {
                    'team_id': 'query',
                    'authorization': 'header',
                    'content_type': 'header',
                    'accept': 'header',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.api_v1_projects_post_endpoint = _Endpoint(
            settings={
                'response_type': (ApiV1ProjectsGet201Response,),
                'auth': [
                    'default'
                ],
                'endpoint_path': '/api/v1/projects',
                'operation_id': 'api_v1_projects_post',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'api_v1_projects_get_request',
                    'authorization',
                    'content_type',
                    'accept',
                ],
                'required': [
                    'api_v1_projects_get_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'api_v1_projects_get_request':
                        (ApiV1ProjectsGetRequest,),
                    'authorization':
                        (str,),
                    'content_type':
                        (str,),
                    'accept':
                        (str,),
                },
                'attribute_map': {
                    'authorization': 'Authorization',
                    'content_type': 'Content-Type',
                    'accept': 'Accept',
                },
                'location_map': {
                    'api_v1_projects_get_request': 'body',
                    'authorization': 'header',
                    'content_type': 'header',
                    'accept': 'header',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.api_v1_projects_project_id_delete_endpoint = _Endpoint(
            settings={
                'response_type': None,
                'auth': [
                    'default'
                ],
                'endpoint_path': '/api/v1/projects/{project_id}',
                'operation_id': 'api_v1_projects_project_id_delete',
                'http_method': 'DELETE',
                'servers': None,
            },
            params_map={
                'all': [
                    'project_id',
                    'authorization',
                    'content_type',
                    'accept',
                ],
                'required': [
                    'project_id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'project_id':
                        (str,),
                    'authorization':
                        (str,),
                    'content_type':
                        (str,),
                    'accept':
                        (str,),
                },
                'attribute_map': {
                    'project_id': 'project_id',
                    'authorization': 'Authorization',
                    'content_type': 'Content-Type',
                    'accept': 'Accept',
                },
                'location_map': {
                    'project_id': 'path',
                    'authorization': 'header',
                    'content_type': 'header',
                    'accept': 'header',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [],
                'content_type': [],
            },
            api_client=api_client
        )
        self.api_v1_projects_project_id_get_endpoint = _Endpoint(
            settings={
                'response_type': (ApiV1ProjectsProjectIdDelete200Response,),
                'auth': [
                    'default'
                ],
                'endpoint_path': '/api/v1/projects/{project_id}',
                'operation_id': 'api_v1_projects_project_id_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'project_id',
                    'authorization',
                    'content_type',
                    'accept',
                ],
                'required': [
                    'project_id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'project_id':
                        (str,),
                    'authorization':
                        (str,),
                    'content_type':
                        (str,),
                    'accept':
                        (str,),
                },
                'attribute_map': {
                    'project_id': 'project_id',
                    'authorization': 'Authorization',
                    'content_type': 'Content-Type',
                    'accept': 'Accept',
                },
                'location_map': {
                    'project_id': 'path',
                    'authorization': 'header',
                    'content_type': 'header',
                    'accept': 'header',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.api_v1_projects_project_id_put_endpoint = _Endpoint(
            settings={
                'response_type': (ApiV1ProjectsProjectIdDelete200Response1,),
                'auth': [
                    'default'
                ],
                'endpoint_path': '/api/v1/projects/{project_id}',
                'operation_id': 'api_v1_projects_project_id_put',
                'http_method': 'PUT',
                'servers': None,
            },
            params_map={
                'all': [
                    'project_id',
                    'authorization',
                    'content_type',
                    'accept',
                    'api_v1_projects_project_id_delete_request',
                ],
                'required': [
                    'project_id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'project_id':
                        (str,),
                    'authorization':
                        (str,),
                    'content_type':
                        (str,),
                    'accept':
                        (str,),
                    'api_v1_projects_project_id_delete_request':
                        (ApiV1ProjectsProjectIdDeleteRequest,),
                },
                'attribute_map': {
                    'project_id': 'project_id',
                    'authorization': 'Authorization',
                    'content_type': 'Content-Type',
                    'accept': 'Accept',
                },
                'location_map': {
                    'project_id': 'path',
                    'authorization': 'header',
                    'content_type': 'header',
                    'accept': 'header',
                    'api_v1_projects_project_id_delete_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )

    def api_v1_projects_get(
        self,
        **kwargs
    ):
        """Return a list containing all projects.  # noqa: E501

        <br>See [Display the specified project.](#display-the-specified-project) for the returned attributes.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.api_v1_projects_get(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            title (str): Filter for projects whose title contains all words in this parameter. The search is case-insensitive but diacritic-sensitive.. [optional]
            hide_archived (str): If set to `true`, archived projects and their children will not be included in the result.. [optional]
            team_id (str): The ID of the team to list projects for. Can be omitted to list the user's private projects. See [Return a list containing all the teams you are a member of.](#return-a-list-containing-all-the-teams-you-are-a-member-of) for obtaining a team ID to provide here.. [optional]
            authorization (str): . [optional]
            content_type (str): . [optional]
            accept (str): . [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            ApiV1ProjectsGet200Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.api_v1_projects_get_endpoint.call_with_http_info(**kwargs)

    def api_v1_projects_hierarchy_get(
        self,
        **kwargs
    ):
        """Return the complete project hierarchy.  # noqa: E501

        <br>See [Display the specified project.](#display-the-specified-project) for the returned attributes.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.api_v1_projects_hierarchy_get(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            team_id (str): The ID of the team to list projects for. Can be omitted to list the user's private projects. See [Return a list containing all the teams you are a member of.](#return-a-list-containing-all-the-teams-you-are-a-member-of) for obtaining a team ID to provide here.. [optional]
            authorization (str): . [optional]
            content_type (str): . [optional]
            accept (str): . [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            ApiV1ProjectsHierarchyGet200Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.api_v1_projects_hierarchy_get_endpoint.call_with_http_info(**kwargs)

    def api_v1_projects_post(
        self,
        api_v1_projects_get_request,
        **kwargs
    ):
        """Create a new project.  # noqa: E501

        <br>See [Display the specified project.](#display-the-specified-project) for the returned attributes.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.api_v1_projects_post(api_v1_projects_get_request, async_req=True)
        >>> result = thread.get()

        Args:
            api_v1_projects_get_request (ApiV1ProjectsGetRequest):

        Keyword Args:
            authorization (str): . [optional]
            content_type (str): . [optional]
            accept (str): . [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            ApiV1ProjectsGet201Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['api_v1_projects_get_request'] = \
            api_v1_projects_get_request
        return self.api_v1_projects_post_endpoint.call_with_http_info(**kwargs)

    def api_v1_projects_project_id_delete(
        self,
        project_id,
        **kwargs
    ):
        """Delete the specified project and all of its children.  # noqa: E501

          # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.api_v1_projects_project_id_delete(project_id, async_req=True)
        >>> result = thread.get()

        Args:
            project_id (str): Optional parameter. The ID of the project to display.

        Keyword Args:
            authorization (str): . [optional]
            content_type (str): . [optional]
            accept (str): . [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            None
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['project_id'] = \
            project_id
        return self.api_v1_projects_project_id_delete_endpoint.call_with_http_info(**kwargs)

    def api_v1_projects_project_id_get(
        self,
        project_id,
        **kwargs
    ):
        """Display the specified project.  # noqa: E501

        <br>The following attributes will be returned:   - `self`: A reference to the entity itself, relative to the API root.  - `title`: The project's title.  - `title_chain`: An array containing the title of the project and all its ancestors. Example: `[\"Parent\", \"Child\"]`  - `color`: The project's color, in hexadecimal format (`#RRGGBB`). Example: `#FF0000`  - `productivity_score`: The project's productivity rating, between -1 (very unproductive) and 1 (very productive). Example: `1`  - `is_archived`: Whether the project has been archived. Defaults to false. Example: `false`  - `parent`: A reference to the enclosing project.  - `children`: The project's children.  - `team_id`: The ID of the team that this project belongs to, if applicable.  <aside class=\"notice\"> Child projects are provided as references; i.e. they only contain the <code>self</code> attribute. </aside>  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.api_v1_projects_project_id_get(project_id, async_req=True)
        >>> result = thread.get()

        Args:
            project_id (str): Optional parameter. The ID of the project to display.

        Keyword Args:
            authorization (str): . [optional]
            content_type (str): . [optional]
            accept (str): . [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            ApiV1ProjectsProjectIdDelete200Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['project_id'] = \
            project_id
        return self.api_v1_projects_project_id_get_endpoint.call_with_http_info(**kwargs)

    def api_v1_projects_project_id_put(
        self,
        project_id,
        **kwargs
    ):
        """Update the specified project.  # noqa: E501

        <br>See [Display the specified project.](#display-the-specified-project) for the returned attributes.  <aside class=\"notice\"> Omitted fields will not be updated, even when using the `PUT` method. </aside>  <aside class=\"notice\"> Changing a project's parent or children is currently not possible. </aside>  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.api_v1_projects_project_id_put(project_id, async_req=True)
        >>> result = thread.get()

        Args:
            project_id (str): Optional parameter. The ID of the project to display.

        Keyword Args:
            authorization (str): . [optional]
            content_type (str): . [optional]
            accept (str): . [optional]
            api_v1_projects_project_id_delete_request (ApiV1ProjectsProjectIdDeleteRequest): [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            ApiV1ProjectsProjectIdDelete200Response1
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['project_id'] = \
            project_id
        return self.api_v1_projects_project_id_put_endpoint.call_with_http_info(**kwargs)

