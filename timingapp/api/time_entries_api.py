"""
    API Reference

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from timingapp.api_client import ApiClient, Endpoint as _Endpoint
from timingapp.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from timingapp.model.api_v1_time_entries_activity_id_delete200_response import ApiV1TimeEntriesActivityIdDelete200Response
from timingapp.model.api_v1_time_entries_activity_id_delete200_response1 import ApiV1TimeEntriesActivityIdDelete200Response1
from timingapp.model.api_v1_time_entries_activity_id_delete_request import ApiV1TimeEntriesActivityIdDeleteRequest
from timingapp.model.api_v1_time_entries_get200_response import ApiV1TimeEntriesGet200Response
from timingapp.model.api_v1_time_entries_get201_response import ApiV1TimeEntriesGet201Response
from timingapp.model.api_v1_time_entries_get_request import ApiV1TimeEntriesGetRequest
from timingapp.model.api_v1_time_entries_start_post201_response import ApiV1TimeEntriesStartPost201Response
from timingapp.model.api_v1_time_entries_start_post_request import ApiV1TimeEntriesStartPostRequest
from timingapp.model.api_v1_time_entries_stop_put200_response import ApiV1TimeEntriesStopPut200Response


class TimeEntriesApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client
        self.api_v1_time_entries_activity_id_delete_endpoint = _Endpoint(
            settings={
                'response_type': None,
                'auth': [
                    'default'
                ],
                'endpoint_path': '/api/v1/time-entries/{activity_id}',
                'operation_id': 'api_v1_time_entries_activity_id_delete',
                'http_method': 'DELETE',
                'servers': None,
            },
            params_map={
                'all': [
                    'activity_id',
                    'authorization',
                    'content_type',
                    'accept',
                ],
                'required': [
                    'activity_id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'activity_id':
                        (str,),
                    'authorization':
                        (str,),
                    'content_type':
                        (str,),
                    'accept':
                        (str,),
                },
                'attribute_map': {
                    'activity_id': 'activity_id',
                    'authorization': 'Authorization',
                    'content_type': 'Content-Type',
                    'accept': 'Accept',
                },
                'location_map': {
                    'activity_id': 'path',
                    'authorization': 'header',
                    'content_type': 'header',
                    'accept': 'header',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [],
                'content_type': [],
            },
            api_client=api_client
        )
        self.api_v1_time_entries_activity_id_get_endpoint = _Endpoint(
            settings={
                'response_type': (ApiV1TimeEntriesActivityIdDelete200Response,),
                'auth': [
                    'default'
                ],
                'endpoint_path': '/api/v1/time-entries/{activity_id}',
                'operation_id': 'api_v1_time_entries_activity_id_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'activity_id',
                    'authorization',
                    'content_type',
                    'accept',
                ],
                'required': [
                    'activity_id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'activity_id':
                        (str,),
                    'authorization':
                        (str,),
                    'content_type':
                        (str,),
                    'accept':
                        (str,),
                },
                'attribute_map': {
                    'activity_id': 'activity_id',
                    'authorization': 'Authorization',
                    'content_type': 'Content-Type',
                    'accept': 'Accept',
                },
                'location_map': {
                    'activity_id': 'path',
                    'authorization': 'header',
                    'content_type': 'header',
                    'accept': 'header',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.api_v1_time_entries_activity_id_put_endpoint = _Endpoint(
            settings={
                'response_type': (ApiV1TimeEntriesActivityIdDelete200Response1,),
                'auth': [
                    'default'
                ],
                'endpoint_path': '/api/v1/time-entries/{activity_id}',
                'operation_id': 'api_v1_time_entries_activity_id_put',
                'http_method': 'PUT',
                'servers': None,
            },
            params_map={
                'all': [
                    'activity_id',
                    'authorization',
                    'content_type',
                    'accept',
                    'api_v1_time_entries_activity_id_delete_request',
                ],
                'required': [
                    'activity_id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'activity_id':
                        (str,),
                    'authorization':
                        (str,),
                    'content_type':
                        (str,),
                    'accept':
                        (str,),
                    'api_v1_time_entries_activity_id_delete_request':
                        (ApiV1TimeEntriesActivityIdDeleteRequest,),
                },
                'attribute_map': {
                    'activity_id': 'activity_id',
                    'authorization': 'Authorization',
                    'content_type': 'Content-Type',
                    'accept': 'Accept',
                },
                'location_map': {
                    'activity_id': 'path',
                    'authorization': 'header',
                    'content_type': 'header',
                    'accept': 'header',
                    'api_v1_time_entries_activity_id_delete_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.api_v1_time_entries_get_endpoint = _Endpoint(
            settings={
                'response_type': (ApiV1TimeEntriesGet200Response,),
                'auth': [
                    'default'
                ],
                'endpoint_path': '/api/v1/time-entries',
                'operation_id': 'api_v1_time_entries_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'start_date_min',
                    'start_date_max',
                    'projects',
                    'include_child_projects',
                    'search_query',
                    'is_running',
                    'include_project_data',
                    'include_team_members',
                    'team_members',
                    'authorization',
                    'content_type',
                    'accept',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'start_date_min':
                        (str,),
                    'start_date_max':
                        (str,),
                    'projects':
                        (str,),
                    'include_child_projects':
                        (str,),
                    'search_query':
                        (str,),
                    'is_running':
                        (str,),
                    'include_project_data':
                        (str,),
                    'include_team_members':
                        (str,),
                    'team_members':
                        (str,),
                    'authorization':
                        (str,),
                    'content_type':
                        (str,),
                    'accept':
                        (str,),
                },
                'attribute_map': {
                    'start_date_min': 'start_date_min',
                    'start_date_max': 'start_date_max',
                    'projects': 'projects[]',
                    'include_child_projects': 'include_child_projects',
                    'search_query': 'search_query',
                    'is_running': 'is_running',
                    'include_project_data': 'include_project_data',
                    'include_team_members': 'include_team_members',
                    'team_members': 'team_members[]',
                    'authorization': 'Authorization',
                    'content_type': 'Content-Type',
                    'accept': 'Accept',
                },
                'location_map': {
                    'start_date_min': 'query',
                    'start_date_max': 'query',
                    'projects': 'query',
                    'include_child_projects': 'query',
                    'search_query': 'query',
                    'is_running': 'query',
                    'include_project_data': 'query',
                    'include_team_members': 'query',
                    'team_members': 'query',
                    'authorization': 'header',
                    'content_type': 'header',
                    'accept': 'header',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.api_v1_time_entries_post_endpoint = _Endpoint(
            settings={
                'response_type': (ApiV1TimeEntriesGet201Response,),
                'auth': [
                    'default'
                ],
                'endpoint_path': '/api/v1/time-entries',
                'operation_id': 'api_v1_time_entries_post',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'api_v1_time_entries_get_request',
                    'authorization',
                    'content_type',
                    'accept',
                ],
                'required': [
                    'api_v1_time_entries_get_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'api_v1_time_entries_get_request':
                        (ApiV1TimeEntriesGetRequest,),
                    'authorization':
                        (str,),
                    'content_type':
                        (str,),
                    'accept':
                        (str,),
                },
                'attribute_map': {
                    'authorization': 'Authorization',
                    'content_type': 'Content-Type',
                    'accept': 'Accept',
                },
                'location_map': {
                    'api_v1_time_entries_get_request': 'body',
                    'authorization': 'header',
                    'content_type': 'header',
                    'accept': 'header',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.api_v1_time_entries_start_post_endpoint = _Endpoint(
            settings={
                'response_type': (ApiV1TimeEntriesStartPost201Response,),
                'auth': [
                    'default'
                ],
                'endpoint_path': '/api/v1/time-entries/start',
                'operation_id': 'api_v1_time_entries_start_post',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'authorization',
                    'content_type',
                    'accept',
                    'api_v1_time_entries_start_post_request',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'authorization':
                        (str,),
                    'content_type':
                        (str,),
                    'accept':
                        (str,),
                    'api_v1_time_entries_start_post_request':
                        (ApiV1TimeEntriesStartPostRequest,),
                },
                'attribute_map': {
                    'authorization': 'Authorization',
                    'content_type': 'Content-Type',
                    'accept': 'Accept',
                },
                'location_map': {
                    'authorization': 'header',
                    'content_type': 'header',
                    'accept': 'header',
                    'api_v1_time_entries_start_post_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.api_v1_time_entries_stop_put_endpoint = _Endpoint(
            settings={
                'response_type': (ApiV1TimeEntriesStopPut200Response,),
                'auth': [
                    'default'
                ],
                'endpoint_path': '/api/v1/time-entries/stop',
                'operation_id': 'api_v1_time_entries_stop_put',
                'http_method': 'PUT',
                'servers': None,
            },
            params_map={
                'all': [
                    'authorization',
                    'content_type',
                    'accept',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'authorization':
                        (str,),
                    'content_type':
                        (str,),
                    'accept':
                        (str,),
                },
                'attribute_map': {
                    'authorization': 'Authorization',
                    'content_type': 'Content-Type',
                    'accept': 'Accept',
                },
                'location_map': {
                    'authorization': 'header',
                    'content_type': 'header',
                    'accept': 'header',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

    def api_v1_time_entries_activity_id_delete(
        self,
        activity_id,
        **kwargs
    ):
        """Delete the specified time entry.  # noqa: E501

          # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.api_v1_time_entries_activity_id_delete(activity_id, async_req=True)
        >>> result = thread.get()

        Args:
            activity_id (str): Optional parameter. The ID of the activity to display.

        Keyword Args:
            authorization (str): . [optional]
            content_type (str): . [optional]
            accept (str): . [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            None
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['activity_id'] = \
            activity_id
        return self.api_v1_time_entries_activity_id_delete_endpoint.call_with_http_info(**kwargs)

    def api_v1_time_entries_activity_id_get(
        self,
        activity_id,
        **kwargs
    ):
        """Display the specified time entry.  # noqa: E501

        <br>The following attributes will be returned:   - `self`: A link to the entity itself, relative to the API root.  - `start_date`: The time entry's start date and time.  - `end_date`: The time entry's end date and time.  - `duration`: The time entry's total duration, in seconds.  - `project`: The project this time entry is associated with.  - `title`: The time entry's title.  - `notes`: The time entry's notes.  - `is_running`: Whether the time entry is currently running. Only one time entry can be running at any given time.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.api_v1_time_entries_activity_id_get(activity_id, async_req=True)
        >>> result = thread.get()

        Args:
            activity_id (str): Optional parameter. The ID of the activity to display.

        Keyword Args:
            authorization (str): . [optional]
            content_type (str): . [optional]
            accept (str): . [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            ApiV1TimeEntriesActivityIdDelete200Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['activity_id'] = \
            activity_id
        return self.api_v1_time_entries_activity_id_get_endpoint.call_with_http_info(**kwargs)

    def api_v1_time_entries_activity_id_put(
        self,
        activity_id,
        **kwargs
    ):
        """Update the specified time entry.  # noqa: E501

        <br>See [Display the specified time entry.](#display-the-specified-time-entry) for the returned attributes.  <aside class=\"notice\"> Omitted fields will not be updated, even when using the `PUT` method. </aside>  <aside class=\"notice\"> A time entry's title and project fields can not both be empty. </aside>  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.api_v1_time_entries_activity_id_put(activity_id, async_req=True)
        >>> result = thread.get()

        Args:
            activity_id (str): Optional parameter. The ID of the activity to display.

        Keyword Args:
            authorization (str): . [optional]
            content_type (str): . [optional]
            accept (str): . [optional]
            api_v1_time_entries_activity_id_delete_request (ApiV1TimeEntriesActivityIdDeleteRequest): [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            ApiV1TimeEntriesActivityIdDelete200Response1
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['activity_id'] = \
            activity_id
        return self.api_v1_time_entries_activity_id_put_endpoint.call_with_http_info(**kwargs)

    def api_v1_time_entries_get(
        self,
        **kwargs
    ):
        """Return a list of time entries.  # noqa: E501

        <br>See [Display the specified time entry.](#display-the-specified-time-entry) for the returned attributes.  Items are ordered descending by their `start_date` field.  <aside class=\"notice\"> If no date range filter is provided by setting <em>both</em> `start_date_min` <em>and</em> `start_date_max`, this query returns all time entries between midnight (UTC) 30 days ago and end of day (UTC) today. </aside>  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.api_v1_time_entries_get(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            start_date_min (str): Restricts the query to time entries whose start date is equal to or later than this parameter.. [optional]
            start_date_max (str): Restricts the query to time entries whose start date is equal to or earlier than this parameter.. [optional]
            projects (str): Restricts the query to time entries associated with the given project. Can be repeated to include time entries from several projects. If you would like to include time entries that are not assigned to any project, you can provide an empty string, i.e. `projects[]=`. [optional]
            include_child_projects (str): If true, the response will also contain time entries that belong to any child projects of the ones provided in `projects[]`. Default: `0`. [optional]
            search_query (str): Restricts the query to time entries whose title and/or notes contain all words in this parameter. The search is case-insensitive but diacritic-sensitive.. [optional]
            is_running (str): If provided, returns only time entries that are either running or not running.. [optional]
            include_project_data (str): If true, the properties of the time entry's project will be included in the response. Default: `0`. [optional]
            include_team_members (str): If true, the response will also contain time entries that belong to other team members, provided the current user has permission to view them. Default: `0`. [optional]
            team_members (str): Restricts the query to data associated with the given user. Can be repeated to include time entries from several users.. [optional]
            authorization (str): . [optional]
            content_type (str): . [optional]
            accept (str): . [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            ApiV1TimeEntriesGet200Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.api_v1_time_entries_get_endpoint.call_with_http_info(**kwargs)

    def api_v1_time_entries_post(
        self,
        api_v1_time_entries_get_request,
        **kwargs
    ):
        """Create a new time entry.  # noqa: E501

        <br>See [Display the specified time entry.](#display-the-specified-time-entry) for the returned attributes.  <aside class=\"notice\"> The title and project fields can not both be empty. </aside>  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.api_v1_time_entries_post(api_v1_time_entries_get_request, async_req=True)
        >>> result = thread.get()

        Args:
            api_v1_time_entries_get_request (ApiV1TimeEntriesGetRequest):

        Keyword Args:
            authorization (str): . [optional]
            content_type (str): . [optional]
            accept (str): . [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            ApiV1TimeEntriesGet201Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['api_v1_time_entries_get_request'] = \
            api_v1_time_entries_get_request
        return self.api_v1_time_entries_post_endpoint.call_with_http_info(**kwargs)

    def api_v1_time_entries_start_post(
        self,
        **kwargs
    ):
        """Start a new timer.  # noqa: E501

        <br>This also stops the currently running timer if there is one.  See [Display the specified time entry.](#display-the-specified-time-entry) for the returned attributes.  <aside class=\"notice\"> The title and project fields can not both be empty. </aside>  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.api_v1_time_entries_start_post(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            authorization (str): . [optional]
            content_type (str): . [optional]
            accept (str): . [optional]
            api_v1_time_entries_start_post_request (ApiV1TimeEntriesStartPostRequest): [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            ApiV1TimeEntriesStartPost201Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.api_v1_time_entries_start_post_endpoint.call_with_http_info(**kwargs)

    def api_v1_time_entries_stop_put(
        self,
        **kwargs
    ):
        """Stop the currently running timer.  # noqa: E501

        <br>Returns the stopped timer's attributes as listed under [Display the specified time entry.](#display-the-specified-time-entry).  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.api_v1_time_entries_stop_put(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            authorization (str): . [optional]
            content_type (str): . [optional]
            accept (str): . [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            ApiV1TimeEntriesStopPut200Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.api_v1_time_entries_stop_put_endpoint.call_with_http_info(**kwargs)

